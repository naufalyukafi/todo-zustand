import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import {
  Input,
  InputGroup,
  InputRightAddon,
  VStack,
  StackDivider,
  Heading,
  Stack,
} from '@chakra-ui/react'
import ListTodo from '../components/list-todo'
import { useState } from 'react'
import { useStore } from '../store/useStore'

const Home: NextPage = () => {
  const { listTodos, addTodo, getUpdateTodo, isEdit, removeTodo, updateTodo } = useStore()
  const [title, setTitle] = useState("")
  const onChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) => {
    setTitle(e.target.value)
  }


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Stack p={5}>
          <Heading textAlign='center' mb={3} as='h4' size='md'>
            CRUD Zustand
          </Heading>
          <InputGroup size='sm'>
            <Input value={title} onChange={(e) => onChangeTitle(e)} placeholder='Input your task..' />
            {
              !isEdit ?
                <InputRightAddon onClick={() => {
                  if (title.length) {
                    addTodo(title)
                    setTitle("")
                  }
                }} cursor="pointer" bg="blue" color="white" fontWeight="bold" children='Tambah' /> :
                <InputRightAddon onClick={() => {
                  updateTodo(title)
                  setTitle("")
                }} cursor="pointer" bg="blue" color="white" fontWeight="bold" children='Edit' />
            }

          </InputGroup>
          <VStack
            divider={<StackDivider borderColor='gray.200' />}
            align='stretch'
            mt={8}
          >
            {
              listTodos?.map((el, i) => (
                <ListTodo
                  key={i}
                  title={el.title}
                  onEdit={() => {
                    getUpdateTodo(el)
                    setTitle(el.title)
                  }}
                  onDelete={() => removeTodo(el?.id)}
                />
              ))
            }
          </VStack>
        </Stack>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
